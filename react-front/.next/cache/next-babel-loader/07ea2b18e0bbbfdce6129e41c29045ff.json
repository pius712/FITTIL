{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, fork, call, put } from 'redux-saga/effects';\nimport 'redux-saga/effects';\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all();\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/sagas/post.js"],"names":["postSaga","all","fork","call","put"],"mappings":";;oDAGyBA,Q;;AAHzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAe,oBAAf;AAEA,eAAe,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,EAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, call, put } from 'redux-saga/effects';\nimport {} from 'redux-saga/effects';\n\nexport default function* postSaga() {\n\tyield all();\n}\n"]},"metadata":{},"sourceType":"module"}