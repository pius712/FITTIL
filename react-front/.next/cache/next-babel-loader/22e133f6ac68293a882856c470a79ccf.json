{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport RepoNavigation from '../component/repo/RepoNavigation';\nimport RepoContents from '../component/repo/RepoContents';\nimport { FETCH_NOTE_LIST_REQUEST } from '../actions';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Divider, Pagination } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux'; // import useSWR from 'swr';\n\nvar Repository = function Repository() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.note;\n  }),\n      mainNotes = _useSelector2.mainNotes,\n      noteLength = _useSelector2.noteLength;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var lastId = mainNotes[mainNotes.length - 1] && mainNotes[mainNotes.length - 1].id;\n  var onChangePage = useCallback(function (value) {\n    console.log(value);\n  }, []);\n  useEffect(function () {\n    if (!me && !me.id) {\n      Router.replace('/');\n    }\n  });\n  useEffect(function () {\n    dispatch({\n      type: FETCH_NOTE_LIST_REQUEST,\n      data: {\n        userId: me.id\n      }\n    });\n  }, []);\n  return __jsx(AppLayout, {\n    content: __jsx(React.Fragment, null, __jsx(RepoNavigation, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }), __jsx(Divider, {\n      style: {\n        marginTop: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    }), __jsx(RepoContents, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }\n    }), __jsx(Pagination, {\n      defaultCurrent: 1,\n      total: noteLength,\n      onChange: onChangePage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  });\n};\n\n_s(Repository, \"keSCPX0mr/1NpkljQSp+m4nn7mg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Repository;\nexport var __N_SSP = true;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js"],"names":["React","useState","useEffect","useCallback","AppLayout","RepoNavigation","RepoContents","FETCH_NOTE_LIST_REQUEST","Link","Router","Divider","Pagination","useDispatch","useSelector","Repository","dispatch","state","user","me","note","mainNotes","noteLength","page","setPage","lastId","length","id","onChangePage","value","console","log","replace","type","data","userId","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAGCC,uBAHD,QAKO,YALP;AAQA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACxB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AADwB,qBAETC,WAAW,CAAC,UAAAG,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFF;AAAA,MAEhBC,EAFgB,gBAEhBA,EAFgB;;AAAA,sBAGUL,WAAW,CAAC,UAAAG,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAHrB;AAAA,MAGhBC,SAHgB,iBAGhBA,SAHgB;AAAA,MAGLC,UAHK,iBAGLA,UAHK;;AAAA,kBAIApB,QAAQ,CAAC,CAAD,CAJR;AAAA,MAIjBqB,IAJiB;AAAA,MAIXC,OAJW;;AAKxB,MAAMC,MAAM,GACXJ,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAAT,IAAmCL,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EADpE;AAEA,MAAMC,YAAY,GAAGxB,WAAW,CAAC,UAAAyB,KAAK,EAAI;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,GAF+B,EAE7B,EAF6B,CAAhC;AAGA1B,EAAAA,SAAS,CAAC,YAAM;AACf,QAAI,CAACgB,EAAD,IAAO,CAACA,EAAE,CAACQ,EAAf,EAAmB;AAClBjB,MAAAA,MAAM,CAACsB,OAAP,CAAe,GAAf;AACA;AACD,GAJQ,CAAT;AAKA7B,EAAAA,SAAS,CAAC,YAAM;AACfa,IAAAA,QAAQ,CAAC;AACRiB,MAAAA,IAAI,EAAEzB,uBADE;AAER0B,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAEhB,EAAE,CAACQ;AADN;AAFE,KAAD,CAAR;AAMA,GAPQ,EAON,EAPM,CAAT;AAQA,SACC,MAAC,SAAD;AACC,IAAA,OAAO,EACN,4BACC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC,MAAC,UAAD;AACC,MAAA,cAAc,EAAE,CADjB;AAEC,MAAA,KAAK,EAAEd,UAFR;AAGC,MAAA,QAAQ,EAAEM,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAgBA,CAvCD;;GAAMb,U;UACYF,W,EACFC,W,EACmBA,W;;;KAH7BC,U;;AAyCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport RepoNavigation from '../component/repo/RepoNavigation';\nimport RepoContents from '../component/repo/RepoContents';\nimport axios from 'axios';\nimport {\n\tLOAD_MY_INFO_REQUEST,\n\tSELECT_MENU_REQUEST,\n\tFETCH_NOTE_LIST_REQUEST,\n\tFETCH_NOTE_LENGTH_REQUEST,\n} from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Divider, Pagination } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n// import useSWR from 'swr';\n\nconst Repository = () => {\n\tconst dispatch = useDispatch();\n\tconst { me } = useSelector(state => state.user);\n\tconst { mainNotes, noteLength } = useSelector(state => state.note);\n\tconst [page, setPage] = useState(1);\n\tconst lastId =\n\t\tmainNotes[mainNotes.length - 1] && mainNotes[mainNotes.length - 1].id;\n\tconst onChangePage = useCallback(value => {\n\t\tconsole.log(value);\n\t}, []);\n\tuseEffect(() => {\n\t\tif (!me && !me.id) {\n\t\t\tRouter.replace('/');\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: FETCH_NOTE_LIST_REQUEST,\n\t\t\tdata: {\n\t\t\t\tuserId: me.id,\n\t\t\t},\n\t\t});\n\t}, []);\n\treturn (\n\t\t<AppLayout\n\t\t\tcontent={\n\t\t\t\t<>\n\t\t\t\t\t<RepoNavigation></RepoNavigation>\n\t\t\t\t\t<Divider style={{ marginTop: '10px' }}></Divider>\n\t\t\t\t\t<RepoContents></RepoContents>\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tdefaultCurrent={1}\n\t\t\t\t\t\ttotal={noteLength}\n\t\t\t\t\t\tonChange={onChangePage}\n\t\t\t\t\t></Pagination>\n\t\t\t\t</>\n\t\t\t}\n\t\t></AppLayout>\n\t);\n};\n\nexport default Repository;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: SELECT_MENU_REQUEST,\n\t\t\tdata: 'repo',\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: FETCH_NOTE_LENGTH_REQUEST,\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}