{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport reducer from '../reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/store/configureStore.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","createWrapper","reducer","composeWithDevTools","rootSaga","configureStore","sagaMiddleware","middleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC5B,QAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,QAAMO,UAAU,GAAG,CAACD,cAAD,CAAnB;AAEA,QAAME,QAAQ,GACb,QACGT,OAAO,CAACD,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CADV,GAEGJ,mBAAmB,CAACL,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAHvB;AAKA,QAAME,KAAK,GAAGZ,WAAW,CAACK,OAAD,EAAUM,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBP,QAAnB,CAAjB;AACA,SAAOK,KAAP;AACA,CAZD;;AAcA,MAAMG,OAAO,GAAGX,aAAa,CAACI,cAAD,EAAiB;AAC7CQ,EAAAA,KAAK;AADwC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport reducer from '../reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from '../sagas';\nconst configureStore = () => {\n\tconst sagaMiddleware = createSagaMiddleware();\n\tconst middleware = [sagaMiddleware];\n\n\tconst enhancer =\n\t\tprocess.env.NODE_ENV === 'production'\n\t\t\t? compose(applyMiddleware(...middleware))\n\t\t\t: composeWithDevTools(applyMiddleware(...middleware));\n\n\tconst store = createStore(reducer, enhancer);\n\tstore.sagaTask = sagaMiddleware.run(rootSaga);\n\treturn store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n\tdebug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}