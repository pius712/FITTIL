{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(registerUSer),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginUser),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logoutUser),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchRegisterUser),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoginUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogoutUser),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport '../actions'; //회원가입\n\nfunction registerUSer() {\n  return _regeneratorRuntime.wrap(function registerUSer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {} catch (err) {}\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} // 로그인\n\n\nfunction loginUser() {\n  return _regeneratorRuntime.wrap(function loginUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          try {} catch (err) {}\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //로그아웃\n\n\nfunction logoutUser() {\n  return _regeneratorRuntime.wrap(function logoutUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          try {} catch (err) {}\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n} // 회원 가입\n\n\nfunction watchRegisterUser() {\n  return _regeneratorRuntime.wrap(function watchRegisterUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest();\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // 로그인\n\n\nfunction watchLoginUser() {\n  return _regeneratorRuntime.wrap(function watchLoginUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest();\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n} // 로그아웃\n\n\nfunction watchLogoutUser() {\n  return _regeneratorRuntime.wrap(function watchLogoutUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest();\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all(fork(watchRegisterUser), fork(watchLoginUser), fork(watchLogoutUser));\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/sagas/user.js"],"names":["registerUSer","loginUser","logoutUser","watchRegisterUser","watchLoginUser","watchLogoutUser","userSaga","all","fork","call","put","takeLatest","err"],"mappings":";;oDAGUA,Y;qDAKAC,S;qDAKAC,U;qDAKAC,iB;qDAKAC,c;qDAKAC,e;qDAGeC,Q;;AA/BzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAe,YAAf,C,CACA;;AACA,SAAUX,YAAV;AAAA;AAAA;AAAA;AAAA;AACC,cAAI,CACH,CADD,CACE,OAAOY,GAAP,EAAY,CAAE;;AAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;;;AACA,SAAUX,SAAV;AAAA;AAAA;AAAA;AAAA;AACC,cAAI,CACH,CADD,CACE,OAAOW,GAAP,EAAY,CAAE;;AAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;;;AACA,SAAUV,UAAV;AAAA;AAAA;AAAA;AAAA;AACC,cAAI,CACH,CADD,CACE,OAAOU,GAAP,EAAY,CAAE;;AAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;;;AACA,SAAUT,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMQ,UAAU,EAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;;;AACA,SAAUP,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMO,UAAU,EAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAGA;;;AAEA,SAAUN,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMM,UAAU,EAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAe,SAAUL,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,CACRC,IAAI,CAACL,iBAAD,CADI,EAERK,IAAI,CAACJ,cAAD,CAFI,EAGRI,IAAI,CAACH,eAAD,CAHI,CAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport {} from '../actions';\n//회원가입\nfunction* registerUSer() {\n\ttry {\n\t} catch (err) {}\n}\n// 로그인\nfunction* loginUser() {\n\ttry {\n\t} catch (err) {}\n}\n//로그아웃\nfunction* logoutUser() {\n\ttry {\n\t} catch (err) {}\n}\n// 회원 가입\nfunction* watchRegisterUser() {\n\tyield takeLatest();\n}\n\n// 로그인\nfunction* watchLoginUser() {\n\tyield takeLatest();\n}\n// 로그아웃\n\nfunction* watchLogoutUser() {\n\tyield takeLatest();\n}\nexport default function* userSaga() {\n\tyield all(\n\t\tfork(watchRegisterUser),\n\t\tfork(watchLoginUser),\n\t\tfork(watchLogoutUser),\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}