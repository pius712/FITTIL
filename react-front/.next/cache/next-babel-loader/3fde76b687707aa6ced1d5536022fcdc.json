{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/[username]/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayout from '../../component/layout/AppLayout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router, { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, SELECT_MENU_REQUEST, FETCH_NOTE_LIST_REQUEST } from '../../actions';\nimport { END } from 'redux-saga';\nimport MainContents from '../../component/MainContents';\n\nconst Main = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const router = useRouter();\n  const {\n    username\n  } = router.query;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!me) {\n      Router.replace('/');\n    }\n  });\n  useEffect(() => {\n    dispatch({\n      type: FETCH_NOTE_LIST_REQUEST,\n      data: {\n        userId: me.id,\n        targetname: username,\n        limit: 6\n      }\n    }, [username]);\n  }, []);\n  return __jsx(AppLayout, {\n    targetname: req.query.username,\n    content: __jsx(MainContents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default Main;\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = req.headers.cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: SELECT_MENU_REQUEST,\n    data: 'overview'\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/[username]/index.js"],"names":["React","useEffect","AppLayout","useSelector","useDispatch","Router","useRouter","wrapper","axios","LOAD_MY_INFO_REQUEST","SELECT_MENU_REQUEST","FETCH_NOTE_LIST_REQUEST","END","MainContents","Main","me","state","user","router","username","query","dispatch","replace","type","data","userId","id","targetname","limit","req","getServerSideProps","store","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACCC,oBADD,EAECC,mBAFD,EAGCC,uBAHD,QAIO,eAJP;AAKA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAASZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAeD,MAAM,CAACE,KAA5B;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACc,EAAL,EAAS;AACRV,MAAAA,MAAM,CAACiB,OAAP,CAAe,GAAf;AACA;AACD,GAJQ,CAAT;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACfoB,IAAAA,QAAQ,CACP;AACCE,MAAAA,IAAI,EAAEZ,uBADP;AAECa,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAEV,EAAE,CAACW,EADN;AAELC,QAAAA,UAAU,EAAER,QAFP;AAGLS,QAAAA,KAAK,EAAE;AAHF;AAFP,KADO,EASP,CAACT,QAAD,CATO,CAAR;AAWA,GAZQ,EAYN,EAZM,CAAT;AAaA,SACC,MAAC,SAAD;AACC,IAAA,UAAU,EAAEU,GAAG,CAACT,KAAJ,CAAUD,QADvB;AAEC,IAAA,OAAO,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAMA,CA7BD;;AA8BA,eAAeL,IAAf;AACA,OAAO,MAAMgB,kBAAkB,GAAGvB,OAAO,CAACuB,kBAAR,CACjC,OAAO;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAP,KAA0B;AACzB,QAAMG,MAAM,GAAGH,GAAG,GAAGA,GAAG,CAACI,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAxB,EAAAA,KAAK,CAAC0B,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIN,GAAG,IAAIG,MAAX,EAAmB;AAClBxB,IAAAA,KAAK,CAAC0B,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCN,GAAG,CAACI,OAAJ,CAAYD,MAA5C;AACA;;AACDD,EAAAA,KAAK,CAACV,QAAN,CAAe;AACdE,IAAAA,IAAI,EAAEd;AADQ,GAAf;AAGAsB,EAAAA,KAAK,CAACV,QAAN,CAAe;AACdE,IAAAA,IAAI,EAAEb,mBADQ;AAEdc,IAAAA,IAAI,EAAE;AAFQ,GAAf;AAIAO,EAAAA,KAAK,CAACV,QAAN,CAAeT,GAAf;AACA,QAAMmB,KAAK,CAACK,QAAN,CAAeC,SAAf,EAAN;AACA,CAhBgC,CAA3B","sourcesContent":["import React, { useEffect } from 'react';\nimport AppLayout from '../../component/layout/AppLayout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router, { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport {\n\tLOAD_MY_INFO_REQUEST,\n\tSELECT_MENU_REQUEST,\n\tFETCH_NOTE_LIST_REQUEST,\n} from '../../actions';\nimport { END } from 'redux-saga';\nimport MainContents from '../../component/MainContents';\nconst Main = () => {\n\tconst { me } = useSelector(state => state.user);\n\tconst router = useRouter();\n\tconst { username } = router.query;\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tif (!me) {\n\t\t\tRouter.replace('/');\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tdispatch(\n\t\t\t{\n\t\t\t\ttype: FETCH_NOTE_LIST_REQUEST,\n\t\t\t\tdata: {\n\t\t\t\t\tuserId: me.id,\n\t\t\t\t\ttargetname: username,\n\t\t\t\t\tlimit: 6,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[username],\n\t\t);\n\t}, []);\n\treturn (\n\t\t<AppLayout\n\t\t\ttargetname={req.query.username}\n\t\t\tcontent={<MainContents />}\n\t\t></AppLayout>\n\t);\n};\nexport default Main;\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: SELECT_MENU_REQUEST,\n\t\t\tdata: 'overview',\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}