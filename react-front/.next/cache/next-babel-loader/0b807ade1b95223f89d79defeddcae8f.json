{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport Link from 'next/link';\n\nvar Repository = function Repository() {\n  return __jsx(AppLayout, {\n    content: __jsx(Link, {\n      href: \"/new\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 6\n      }\n    }, \"\\uB9CC\\uB4E4\\uAE30\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  });\n};\n\n_c = Repository;\nexport var __N_SSP = true;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js"],"names":["React","AppLayout","Link","Repository"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAKA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,SACC,MAAC,SAAD;AACC,IAAA,OAAO,EACN,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AASA,CAVD;;KAAMA,U;;AAYN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, SELECT_MENU_REQUEST } from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\nconst Repository = () => {\n\treturn (\n\t\t<AppLayout\n\t\t\tcontent={\n\t\t\t\t<Link href=\"/new\">\n\t\t\t\t\t<a>만들기</a>\n\t\t\t\t</Link>\n\t\t\t}\n\t\t></AppLayout>\n\t);\n};\n\nexport default Repository;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: SELECT_MENU_REQUEST,\n\t\t\tdata: 'repo',\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}