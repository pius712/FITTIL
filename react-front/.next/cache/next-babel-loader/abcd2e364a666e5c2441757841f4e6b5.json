{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/component/WorkoutRecords.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Calendar, Badge } from 'antd';\n\nvar WorkoutRecords = function WorkoutRecords() {\n  _s();\n\n  var getListData = useCallback(function (value) {\n    var listData;\n\n    switch (value.date()) {\n      case 8:\n        listData = [{\n          type: 'warning',\n          content: 'This is warning event.'\n        }, {\n          type: 'success',\n          content: 'This is usual event.'\n        }];\n        break;\n\n      case 10:\n        listData = [{\n          type: 'warning',\n          content: 'This is warning event.'\n        }, {\n          type: 'success',\n          content: 'This is usual event.'\n        }, {\n          type: 'error',\n          content: 'This is error event.'\n        }];\n        break;\n\n      case 15:\n        listData = [{\n          type: 'warning',\n          content: 'This is warning event'\n        }, {\n          type: 'success',\n          content: 'This is very long usual event。。....'\n        }, {\n          type: 'error',\n          content: 'This is error event 1.'\n        }, {\n          type: 'error',\n          content: 'This is error event 2.'\n        }, {\n          type: 'error',\n          content: 'This is error event 3.'\n        }, {\n          type: 'error',\n          content: 'This is error event 4.'\n        }];\n        break;\n\n      default:\n    }\n\n    return listData || [];\n  }, []);\n  var dateCellRender = useCallback(function (value) {\n    var listData = getListData(value);\n    return __jsx(\"ul\", {\n      className: \"events\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, listData.map(function (item) {\n      return __jsx(\"li\", {\n        key: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }\n      }, __jsx(Badge, {\n        status: item.type,\n        text: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }));\n    }));\n  }, []);\n  var getMonthData = useCallback(function (value) {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }, []);\n  var monthCellRender = useCallback(function (value) {\n    var num = getMonthData(value);\n    return num ? __jsx(\"div\", {\n      className: \"notes-month\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }\n    }, __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, num), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, \"Backlog number\")) : null;\n  }, []);\n  return __jsx(Calendar, {\n    dateCellRender: dateCellRender,\n    monthCellRender: monthCellRender,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  });\n};\n\n_s(WorkoutRecords, \"XMqIl0Z1u7xyC9H0IRnYrOwl0fw=\");\n\n_c = WorkoutRecords;\nexport default WorkoutRecords;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutRecords\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/component/WorkoutRecords.js"],"names":["React","useCallback","Calendar","Badge","WorkoutRecords","getListData","value","listData","date","type","content","dateCellRender","map","item","getMonthData","month","monthCellRender","num"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Calendar, Badge } from 'antd';\n\nconst WorkoutRecords = () => {\n\tconst getListData = useCallback(value => {\n\t\tlet listData;\n\t\tswitch (value.date()) {\n\t\t\tcase 8:\n\t\t\t\tlistData = [\n\t\t\t\t\t{ type: 'warning', content: 'This is warning event.' },\n\t\t\t\t\t{ type: 'success', content: 'This is usual event.' },\n\t\t\t\t];\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tlistData = [\n\t\t\t\t\t{ type: 'warning', content: 'This is warning event.' },\n\t\t\t\t\t{ type: 'success', content: 'This is usual event.' },\n\t\t\t\t\t{ type: 'error', content: 'This is error event.' },\n\t\t\t\t];\n\t\t\t\tbreak;\n\t\t\tcase 15:\n\t\t\t\tlistData = [\n\t\t\t\t\t{ type: 'warning', content: 'This is warning event' },\n\t\t\t\t\t{ type: 'success', content: 'This is very long usual event。。....' },\n\t\t\t\t\t{ type: 'error', content: 'This is error event 1.' },\n\t\t\t\t\t{ type: 'error', content: 'This is error event 2.' },\n\t\t\t\t\t{ type: 'error', content: 'This is error event 3.' },\n\t\t\t\t\t{ type: 'error', content: 'This is error event 4.' },\n\t\t\t\t];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t\treturn listData || [];\n\t}, []);\n\n\tconst dateCellRender = useCallback(value => {\n\t\tconst listData = getListData(value);\n\t\treturn (\n\t\t\t<ul className=\"events\">\n\t\t\t\t{listData.map(item => (\n\t\t\t\t\t<li key={item.content}>\n\t\t\t\t\t\t<Badge status={item.type} text={item.content} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}, []);\n\n\tconst getMonthData = useCallback(value => {\n\t\tif (value.month() === 8) {\n\t\t\treturn 1394;\n\t\t}\n\t}, []);\n\n\tconst monthCellRender = useCallback(value => {\n\t\tconst num = getMonthData(value);\n\t\treturn num ? (\n\t\t\t<div className=\"notes-month\">\n\t\t\t\t<section>{num}</section>\n\t\t\t\t<span>Backlog number</span>\n\t\t\t</div>\n\t\t) : null;\n\t}, []);\n\n\treturn (\n\t\t<Calendar\n\t\t\tdateCellRender={dateCellRender}\n\t\t\tmonthCellRender={monthCellRender}\n\t\t/>\n\t);\n};\n\nexport default WorkoutRecords;\n"]},"metadata":{},"sourceType":"module"}