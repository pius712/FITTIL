{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, SELECT_MENU_REQUEST } from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\n\nconst Repository = () => {\n  return __jsx(AppLayout, {\n    content: __jsx(Link, {\n      href: \"/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 6\n      }\n    }, \"\\uB9CC\\uB4E4\\uAE30\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default Repository;\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = req.headers.cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: SELECT_MENU_REQUEST,\n    data: 'repo'\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js"],"names":["React","AppLayout","axios","LOAD_MY_INFO_REQUEST","SELECT_MENU_REQUEST","END","wrapper","Link","Repository","getServerSideProps","store","req","cookie","headers","defaults","Cookie","dispatch","type","data","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,YAA1D;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,UAAU,GAAG,MAAM;AACxB,SACC,MAAC,SAAD;AACC,IAAA,OAAO,EACN,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AASA,CAVD;;AAYA,eAAeA,UAAf;AAEA,OAAO,MAAMC,kBAAkB,GAAGH,OAAO,CAACG,kBAAR,CACjC,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AACzB,QAAMC,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAV,EAAAA,KAAK,CAACY,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIJ,GAAG,IAAIC,MAAX,EAAmB;AAClBV,IAAAA,KAAK,CAACY,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,GAAG,CAACE,OAAJ,CAAYD,MAA5C;AACA;;AACDF,EAAAA,KAAK,CAACM,QAAN,CAAe;AACdC,IAAAA,IAAI,EAAEd;AADQ,GAAf;AAGAO,EAAAA,KAAK,CAACM,QAAN,CAAe;AACdC,IAAAA,IAAI,EAAEb,mBADQ;AAEdc,IAAAA,IAAI,EAAE;AAFQ,GAAf;AAIAR,EAAAA,KAAK,CAACM,QAAN,CAAeX,GAAf;AACA,QAAMK,KAAK,CAACS,QAAN,CAAeC,SAAf,EAAN;AACA,CAhBgC,CAA3B","sourcesContent":["import React from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, SELECT_MENU_REQUEST } from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\nconst Repository = () => {\n\treturn (\n\t\t<AppLayout\n\t\t\tcontent={\n\t\t\t\t<Link href=\"/new\">\n\t\t\t\t\t<a>만들기</a>\n\t\t\t\t</Link>\n\t\t\t}\n\t\t></AppLayout>\n\t);\n};\n\nexport default Repository;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: SELECT_MENU_REQUEST,\n\t\t\tdata: 'repo',\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}