{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupLayout from '../component/layout/SignupLayout';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../actions';\nimport { END } from 'redux-saga';\n\nconst Home = () => {\n  const {\n    me,\n    registerDone,\n    registerError\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.push('/main');\n    }\n  });\n  useEffect(() => {\n    if (registerDone && me && me.id) {\n      Router.push('/main');\n    }\n  });\n  return __jsx(SignupLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Home;\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = req.headers.cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/index.js"],"names":["React","useEffect","Router","useSelector","useDispatch","SignupLayout","wrapper","axios","LOAD_MY_INFO_REQUEST","END","Home","me","registerDone","registerError","state","user","id","push","getServerSideProps","store","req","cookie","headers","defaults","Cookie","dispatch","type","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,YAArC;AACA,SAASC,GAAT,QAAoB,YAApB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,YAAN;AAAoBC,IAAAA;AAApB,MAAsCV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvD;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIU,EAAE,IAAIA,EAAE,CAACK,EAAb,EAAiB;AAChBd,MAAAA,MAAM,CAACe,IAAP,CAAY,OAAZ;AACA;AACD,GAJQ,CAAT;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIW,YAAY,IAAID,EAAhB,IAAsBA,EAAE,CAACK,EAA7B,EAAiC;AAChCd,MAAAA,MAAM,CAACe,IAAP,CAAY,OAAZ;AACA;AACD,GAJQ,CAAT;AAMA,SAAO,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CAfD;;AAiBA,eAAeP,IAAf;AACA,OAAO,MAAMQ,kBAAkB,GAAGZ,OAAO,CAACY,kBAAR,CACjC,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AACzB,QAAMC,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAd,EAAAA,KAAK,CAACgB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIJ,GAAG,IAAIC,MAAX,EAAmB;AAClBd,IAAAA,KAAK,CAACgB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,GAAG,CAACE,OAAJ,CAAYD,MAA5C;AACA;;AACDF,EAAAA,KAAK,CAACM,QAAN,CAAe;AACdC,IAAAA,IAAI,EAAElB;AADQ,GAAf;AAGAW,EAAAA,KAAK,CAACM,QAAN,CAAehB,GAAf;AACA,QAAMU,KAAK,CAACQ,QAAN,CAAeC,SAAf,EAAN;AACA,CAZgC,CAA3B","sourcesContent":["import React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupLayout from '../component/layout/SignupLayout';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../actions';\nimport { END } from 'redux-saga';\nconst Home = () => {\n\tconst { me, registerDone, registerError } = useSelector(state => state.user);\n\n\tuseEffect(() => {\n\t\tif (me && me.id) {\n\t\t\tRouter.push('/main');\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tif (registerDone && me && me.id) {\n\t\t\tRouter.push('/main');\n\t\t}\n\t});\n\n\treturn <SignupLayout></SignupLayout>;\n};\n\nexport default Home;\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}