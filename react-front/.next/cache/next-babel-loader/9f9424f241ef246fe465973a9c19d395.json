{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport RepoNavigation from '../component/repo/RepoNavigation';\nimport RepoContents from '../component/repo/RepoContents';\nimport { FETCH_NOTE_LIST_REQUEST } from '../actions';\nimport Link from 'next/link';\nimport { Divider } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nvar Repository = function Repository() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.note;\n  }),\n      mainNotes = _useSelector2.mainNotes;\n\n  var lastId = mainNotes[mainNotes.length - 1] && mainNotes[mainNotes.length - 1].id;\n  useEffect(function () {\n    dispatch({\n      type: FETCH_NOTE_LIST_REQUEST,\n      data: {\n        userId: me.id\n      }\n    });\n  });\n  return __jsx(AppLayout, {\n    content: __jsx(React.Fragment, null, __jsx(RepoNavigation, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }), __jsx(Divider, {\n      style: {\n        marginTop: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }\n    }), __jsx(RepoContents, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  });\n};\n\n_s(Repository, \"2iwqdKxdA59DTGzAj7ZYc5m6N0I=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Repository;\nexport var __N_SSP = true;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js"],"names":["React","useEffect","AppLayout","RepoNavigation","RepoContents","FETCH_NOTE_LIST_REQUEST","Link","Divider","useDispatch","useSelector","Repository","dispatch","state","user","me","note","mainNotes","lastId","length","id","type","data","userId","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAGCC,uBAHD,QAIO,YAJP;AAOA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACxB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AADwB,qBAETC,WAAW,CAAC,UAAAG,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFF;AAAA,MAEhBC,EAFgB,gBAEhBA,EAFgB;;AAAA,sBAGFL,WAAW,CAAC,UAAAG,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAHT;AAAA,MAGhBC,SAHgB,iBAGhBA,SAHgB;;AAIxB,MAAMC,MAAM,GACXD,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAAT,IAAmCF,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EADpE;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACfU,IAAAA,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEf,uBADE;AAERgB,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAER,EAAE,CAACK;AADN;AAFE,KAAD,CAAR;AAMA,GAPQ,CAAT;AAQA,SACC,MAAC,SAAD;AACC,IAAA,OAAO,EACN,4BACC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAWA,CAzBD;;GAAMb,U;UACYF,W,EACFC,W,EACOA,W;;;KAHjBC,U;;AA2BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport RepoNavigation from '../component/repo/RepoNavigation';\nimport RepoContents from '../component/repo/RepoContents';\nimport axios from 'axios';\nimport {\n\tLOAD_MY_INFO_REQUEST,\n\tSELECT_MENU_REQUEST,\n\tFETCH_NOTE_LIST_REQUEST,\n} from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\nimport { Divider } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nconst Repository = () => {\n\tconst dispatch = useDispatch();\n\tconst { me } = useSelector(state => state.user);\n\tconst { mainNotes } = useSelector(state => state.note);\n\tconst lastId =\n\t\tmainNotes[mainNotes.length - 1] && mainNotes[mainNotes.length - 1].id;\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: FETCH_NOTE_LIST_REQUEST,\n\t\t\tdata: {\n\t\t\t\tuserId: me.id,\n\t\t\t},\n\t\t});\n\t});\n\treturn (\n\t\t<AppLayout\n\t\t\tcontent={\n\t\t\t\t<>\n\t\t\t\t\t<RepoNavigation></RepoNavigation>\n\t\t\t\t\t<Divider style={{ marginTop: '10px' }}></Divider>\n\t\t\t\t\t<RepoContents></RepoContents>\n\t\t\t\t</>\n\t\t\t}\n\t\t></AppLayout>\n\t);\n};\n\nexport default Repository;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: SELECT_MENU_REQUEST,\n\t\t\tdata: 'repo',\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}