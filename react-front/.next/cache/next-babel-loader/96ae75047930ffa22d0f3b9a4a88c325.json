{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport RepoNavigation from '../component/repo/RepoNavigation';\nimport RepoContents from '../component/repo/RepoContents';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, SELECT_MENU_REQUEST, FETCH_NOTE_LIST_REQUEST, FETCH_NOTE_LENGTH_REQUEST } from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Divider, Pagination } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux'; // import useSWR from 'swr';\n\nconst Repository = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainNotes,\n    noteLength\n  } = useSelector(state => state.note);\n  const [page, setPage] = useState(1);\n  const lastId = mainNotes[mainNotes.length - 1] && mainNotes[mainNotes.length - 1].id;\n  const onChangePage = useCallback(value => {\n    console.log(value);\n  }, []);\n  useEffect(() => {\n    if (!me && !me.id) {\n      Router.replace('/');\n    }\n  });\n  useEffect(() => {\n    dispatch({\n      type: FETCH_NOTE_LIST_REQUEST,\n      data: {\n        userId: me.id\n      }\n    });\n  }, []);\n  return __jsx(AppLayout, {\n    content: __jsx(React.Fragment, null, __jsx(RepoNavigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }), __jsx(Divider, {\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    }), __jsx(RepoContents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }\n    }), __jsx(Pagination, {\n      defaultCurrent: 1,\n      total: noteLength,\n      onChange: onChangePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default Repository;\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = req.headers.cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: SELECT_MENU_REQUEST,\n    data: 'repo'\n  });\n  store.dispatch({\n    type: FETCH_NOTE_LENGTH_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/fittil/react-front/pages/repository.js"],"names":["React","useEffect","useCallback","AppLayout","RepoNavigation","RepoContents","axios","LOAD_MY_INFO_REQUEST","SELECT_MENU_REQUEST","FETCH_NOTE_LIST_REQUEST","FETCH_NOTE_LENGTH_REQUEST","END","wrapper","Link","Router","Divider","Pagination","useDispatch","useSelector","Repository","dispatch","me","state","user","mainNotes","noteLength","note","page","setPage","useState","lastId","length","id","onChangePage","value","console","log","replace","type","data","userId","marginTop","getServerSideProps","store","req","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport AppLayout from '../component/layout/AppLayout';\nimport RepoNavigation from '../component/repo/RepoNavigation';\nimport RepoContents from '../component/repo/RepoContents';\nimport axios from 'axios';\nimport {\n\tLOAD_MY_INFO_REQUEST,\n\tSELECT_MENU_REQUEST,\n\tFETCH_NOTE_LIST_REQUEST,\n\tFETCH_NOTE_LENGTH_REQUEST,\n} from '../actions';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Divider, Pagination } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n// import useSWR from 'swr';\n\nconst Repository = () => {\n\tconst dispatch = useDispatch();\n\tconst { me } = useSelector(state => state.user);\n\tconst { mainNotes, noteLength } = useSelector(state => state.note);\n\tconst [page, setPage] = useState(1);\n\tconst lastId =\n\t\tmainNotes[mainNotes.length - 1] && mainNotes[mainNotes.length - 1].id;\n\tconst onChangePage = useCallback(value => {\n\t\tconsole.log(value);\n\t}, []);\n\tuseEffect(() => {\n\t\tif (!me && !me.id) {\n\t\t\tRouter.replace('/');\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: FETCH_NOTE_LIST_REQUEST,\n\t\t\tdata: {\n\t\t\t\tuserId: me.id,\n\t\t\t},\n\t\t});\n\t}, []);\n\treturn (\n\t\t<AppLayout\n\t\t\tcontent={\n\t\t\t\t<>\n\t\t\t\t\t<RepoNavigation></RepoNavigation>\n\t\t\t\t\t<Divider style={{ marginTop: '10px' }}></Divider>\n\t\t\t\t\t<RepoContents></RepoContents>\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tdefaultCurrent={1}\n\t\t\t\t\t\ttotal={noteLength}\n\t\t\t\t\t\tonChange={onChangePage}\n\t\t\t\t\t></Pagination>\n\t\t\t\t</>\n\t\t\t}\n\t\t></AppLayout>\n\t);\n};\n\nexport default Repository;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = req.headers.cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: SELECT_MENU_REQUEST,\n\t\t\tdata: 'repo',\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: FETCH_NOTE_LENGTH_REQUEST,\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}